<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LYJC</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lyjc.github.io/"/>
  <updated>2019-12-12T16:03:31.756Z</updated>
  <id>http://lyjc.github.io/</id>
  
  <author>
    <name>Song</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git+hexo博客</title>
    <link href="http://lyjc.github.io/2019/12/12/Gitpage+hexo%E5%88%B6%E4%BD%9C%E5%8D%9A%E5%AE%A2/"/>
    <id>http://lyjc.github.io/2019/12/12/Gitpage+hexo%E5%88%B6%E4%BD%9C%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-12-12T15:20:25.080Z</published>
    <updated>2019-12-12T16:03:31.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Gitpage博客教程"><a href="#Hexo-Gitpage博客教程" class="headerlink" title="Hexo+Gitpage博客教程"></a>Hexo+Gitpage博客教程</h1><h2 id="1，注册Github"><a href="#1，注册Github" class="headerlink" title="1，注册Github"></a>1，<a href="https://github.com/" target="_blank" rel="noopener">注册Github</a></h2><p>github不多说了，网上关于git博客制作需要注意的教程和资料很多，新建一个仓库仓库地址为用户名.github.io这个仓库需要公开等，详情搜索Gitpage。注意本地最好安装有gitbash。</p><h2 id="2，下载NodeJS"><a href="#2，下载NodeJS" class="headerlink" title="2，下载NodeJS"></a>2，<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">下载NodeJS</a></h2><p><strong>一定要下载nodejs</strong> 这是重点，下载安装也不多说了，地址在标题上。</p><h2 id="3，登陆Hexo"><a href="#3，登陆Hexo" class="headerlink" title="3，登陆Hexo"></a>3，登陆<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a></h2><p><strong>–任意目录下执行 npm install hexo-cli -g （最好在gitbash命令行中）用于安装hexo–</strong></p><p>1，到一个以后准备当作博客根据地的目录下</p><p>2，进入gitbash</p><p>3，执行【hexo init .】，会将 blog 文件夹初始化成为 hexo的博客文件夹。此时目录下会有很多文件夹和文件，重点说一下source,themes,_config.yml</p><p>​    *<em>source : *</em>之后写博客的目录。</p><p>​    *<em>themes : *</em>下载的博客风格的目录。</p><p>​    *<em>_config.yml : *</em>这个文件是整个博客的配置信息所在。</p><p>4，执行【npm install】多出了node_modules文件夹，是与package.json相关的用处，与依赖相关。</p><p>5，执行【hexo server】开启hexo服务。</p><p>关于hexo的详细信息请<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">参考</a></p><h2 id="4，hexo选择风格"><a href="#4，hexo选择风格" class="headerlink" title="4，hexo选择风格"></a>4，<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo</a>选择风格</h2><p>在这个页面中点击图片会跳转预览，点击风格名会跳转到git地址。在git中一般会有关于这个风格的部署和配置的介绍。然后需要git clone所需要的风格项目。一般按照里面的配置就好了。</p><h2 id="5，hexo常用命令"><a href="#5，hexo常用命令" class="headerlink" title="5，hexo常用命令"></a>5，hexo常用命令</h2><p>*<em>hexo g : *</em>生成页面</p><p>*<em>hexo d : *</em>部署到git上</p><p>*<em>hexo s : *</em>本地模拟服务</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-Gitpage博客教程&quot;&gt;&lt;a href=&quot;#Hexo-Gitpage博客教程&quot; class=&quot;headerlink&quot; title=&quot;Hexo+Gitpage博客教程&quot;&gt;&lt;/a&gt;Hexo+Gitpage博客教程&lt;/h1&gt;&lt;h2 id=&quot;1，注册Githu
      
    
    </summary>
    
    
      <category term="博客" scheme="http://lyjc.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="git" scheme="http://lyjc.github.io/tags/git/"/>
    
      <category term="hexo" scheme="http://lyjc.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>初识scala</title>
    <link href="http://lyjc.github.io/2019/12/09/Scala%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://lyjc.github.io/2019/12/09/Scala%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2019-12-08T16:06:26.842Z</published>
    <updated>2019-12-08T16:37:04.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scala"><a href="#Scala" class="headerlink" title="Scala"></a>Scala</h2><h3 id="下载安装scala去官网下载"><a href="#下载安装scala去官网下载" class="headerlink" title="下载安装scala去官网下载"></a>下载安装scala<a href="https://www.scala-lang.org/" target="_blank" rel="noopener">去官网下载</a></h3><p>具体安装细节不做解释网上教程挺多的。笔者是使用idea编辑器下载scala支持插件开发学习scala。</p><h3 id="scala语言的HelloWorld"><a href="#scala语言的HelloWorld" class="headerlink" title="scala语言的HelloWorld"></a>scala语言的HelloWorld</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">First</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        println(<span class="string">"Hello world,scala"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>直接粘贴进入idea即可运行。</p><h3 id="代码结构初识"><a href="#代码结构初识" class="headerlink" title="代码结构初识"></a>代码结构初识</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">First</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>暂时先理解scala中的object是一个完全静态的类所有方法变量全是静态的，class只能是实体类型不能静态化。以后再详细说明object和class的区别。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>在scala中 <strong>def</strong>  表示声明一个方法，因为在object中所以方法是静态的。学过java的都知道静态的main函数自然是主函数了。再看主函数参数在java中  <strong>String[] args</strong>在这里写成了<strong>args:Array[String]</strong>。原因在于scala中是将变量的类型写在变量名后面的中间用 ：分开。而Array是scala中数组的表示，到了scala集合部分在细谈。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">println(&quot;Hello world,scala&quot;)</span></pre></td></tr></table></figure><p>println是scala中默认环境的函数，不用声明类（似于java中的lang包），用于标准输出，对应的还有printf。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Scala&quot;&gt;&lt;a href=&quot;#Scala&quot; class=&quot;headerlink&quot; title=&quot;Scala&quot;&gt;&lt;/a&gt;Scala&lt;/h2&gt;&lt;h3 id=&quot;下载安装scala去官网下载&quot;&gt;&lt;a href=&quot;#下载安装scala去官网下载&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="scala" scheme="http://lyjc.github.io/categories/scala/"/>
    
    
      <category term="scala" scheme="http://lyjc.github.io/tags/scala/"/>
    
      <category term="java" scheme="http://lyjc.github.io/tags/java/"/>
    
      <category term="大数据" scheme="http://lyjc.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
</feed>
