[{"title":"git+hexo博客","url":"/2019/12/12/Gitpage+hexo制作博客/","content":"\n# Hexo+Gitpage博客教程\n\n## 1，[注册Github](https://github.com/)\n\ngithub不多说了，网上关于git博客制作需要注意的教程和资料很多，新建一个仓库仓库地址为用户名.github.io这个仓库需要公开等，详情搜索Gitpage。注意本地最好安装有gitbash。\n\n## 2，[下载NodeJS](https://nodejs.org/en/download/)\n\n**一定要下载nodejs** 这是重点，下载安装也不多说了，地址在标题上。\n\n## 3，登陆[Hexo](https://hexo.io/zh-cn/)\n\n**--任意目录下执行 npm install hexo-cli -g （最好在gitbash命令行中）用于安装hexo--**\n\n1，到一个以后准备当作博客根据地的目录下\n\n2，进入gitbash\n\n3，执行【hexo init .】，会将 blog 文件夹初始化成为 hexo的博客文件夹。此时目录下会有很多文件夹和文件，重点说一下source,themes,_config.yml\n\n​\t**source : **之后写博客的目录。\n\n​\t**themes : **下载的博客风格的目录。\n\n​\t**_config.yml : **这个文件是整个博客的配置信息所在。\n\n4，执行【npm install】多出了node_modules文件夹，是与package.json相关的用处，与依赖相关。\n\n5，执行【hexo server】开启hexo服务。\n\n关于hexo的详细信息请[参考](https://hexo.io/zh-cn/docs/)\n\n## 4，[hexo](https://hexo.io/themes/)选择风格\n\n在这个页面中点击图片会跳转预览，点击风格名会跳转到git地址。在git中一般会有关于这个风格的部署和配置的介绍。然后需要git clone所需要的风格项目。一般按照里面的配置就好了。\n\n## 5，hexo常用命令\n\n**hexo g : **生成页面\n\n**hexo d : **部署到git上\n\n**hexo s : **本地模拟服务\n\n","tags":["git","hexo"],"categories":["博客"]},{"title":"初识scala","url":"/2019/12/09/Scala基本语法/","content":"\n## Scala\n\n### 下载安装scala[去官网下载](https://www.scala-lang.org/)\n\n具体安装细节不做解释网上教程挺多的。笔者是使用idea编辑器下载scala支持插件开发学习scala。\n\n### scala语言的HelloWorld\n\n```scala\nobject First {\n\tdef main(args: Array[String]){\n        println(\"Hello world,scala\")\n    }\n}\n```\n\n直接粘贴进入idea即可运行。\n\n### 代码结构初识\n\n```scala\nobject First {\n}\n```\n\n暂时先理解scala中的object是一个完全静态的类所有方法变量全是静态的，class只能是实体类型不能静态化。以后再详细说明object和class的区别。\n\n```scala\ndef main(args: Array[String]){\n}\n```\n\n在scala中 **def**  表示声明一个方法，因为在object中所以方法是静态的。学过java的都知道静态的main函数自然是主函数了。再看主函数参数在java中  **String[] args**在这里写成了**args:Array[String]**。原因在于scala中是将变量的类型写在变量名后面的中间用 ：分开。而Array是scala中数组的表示，到了scala集合部分在细谈。\n\n```\nprintln(\"Hello world,scala\")\n```\n\nprintln是scala中默认环境的函数，不用声明类（似于java中的lang包），用于标准输出，对应的还有printf。\n\n","tags":["scala","java","大数据"],"categories":["scala"]}]